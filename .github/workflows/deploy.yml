name: Deploy SPA to S3+CloudFront

'on':
  push:
    branches: ['main']
  workflow_dispatch:

concurrency:
  group: deploy-prod
  cancel-in-progress: true

env:
  AWS_DEFAULT_REGION: eu-central-1
  TF_IN_AUTOMATION: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # === Build Vue (корень репо) ===
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install deps
        run: npm ci

      - name: Build
        shell: bash
        run: |
          npm run build
          # dist/ появится в корне репо

      # === Terraform (в папке infra/) ===
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        working-directory: infra
        run: terraform init -input=false

      - name: Terraform Apply
        working-directory: infra
        run: terraform apply -auto-approve -input=false -var="project_name=my-vue"

      - name: Read outputs
        id: tfout
        working-directory: infra
        shell: bash
        run: |
          echo "bucket=$(terraform output -raw bucket_name)" >> "$GITHUB_OUTPUT"
          echo "dist_id=$(terraform output -raw distribution_id)" >> "$GITHUB_OUTPUT"
          echo "site=$(terraform output -raw website_url)" >> "$GITHUB_OUTPUT"

      # === Upload + Invalidate ===
      - name: Upload assets to S3
        shell: bash
        run: |
          aws s3 sync ./dist "s3://${{ steps.tfout.outputs.bucket }}" \
            --delete \
            --exact-timestamps

      - name: Invalidate CloudFront
        shell: bash
        run: |
          aws cloudfront create-invalidation \
            --distribution-id "${{ steps.tfout.outputs.dist_id }}" \
            --paths "/*"

      - name: Print site URL
        shell: bash
        run: |
          printf 'Deployed: %s\n' "${{ steps.tfout.outputs.site }}"
