name: Deploy SPA

on:
  push:
    branches: ['main']

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: eu-south-2
  TF_WORKDIR: infra

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install deps & build
        run: |
          npm ci
          npm run build

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.5

      - name: Terraform Init
        working-directory: ${{ env.TF_WORKDIR }}
        run: terraform init -upgrade

      - name: Terraform Apply (S3+CF)
        working-directory: ${{ env.TF_WORKDIR }}
        run: terraform apply -auto-approve

      - name: Export Terraform outputs
        id: tfout
        working-directory: ${{ env.TF_WORKDIR }}
        run: |
          echo "S3_BUCKET=$(terraform output -raw bucket_name)" >> $GITHUB_ENV
          echo "CF_DIST_ID=$(terraform output -raw cloudfront_distribution_id)" >> $GITHUB_ENV
          echo "CF_DOMAIN=$(terraform output -raw cloudfront_domain)" >> $GITHUB_ENV

      - name: Upload static assets (long cache)
        run: |
          aws s3 sync dist/ "s3://${{ env.S3_BUCKET }}" \
            --delete \
            --exclude index.html \
            --cache-control 'public, max-age=31536000, immutable'
      - name: Upload index.html (no cache)
        run: |
          aws s3 cp dist/index.html "s3://${{ env.S3_BUCKET }}/index.html" \
            --cache-control 'no-cache, no-store, must-revalidate'

      - name: CloudFront invalidation
        run: |
          aws cloudfront create-invalidation \
            --distribution-id "${{ env.CF_DIST_ID }}" \
            --paths "/*"

      - name: Echo site URL
        run: echo "Deployed: https://${{ env.CF_DOMAIN }}"